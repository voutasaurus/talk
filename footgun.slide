Go Concurrency Footguns
Unshooting your independently moving feet
19:30 18 Oct 2017
Tags: Go, concurrency, race, datarace, logicrace

Anthony Voutas
Gopher, Backplane
anthony@backplane.io
@voutasaurus

References:
https://golang.org/doc/articles/race_detector.html
https://golang.org/cmd/vet/
https://golang.org/pkg/testing/

: Structure
: 1) Hi. I’m Anthony. I'm a happy gopher. Been a gopher since 2013 but professionally for 3 years now.
: 2) I work at Backplane here in SF. We solve TLS cert management and service discovery. We're also API first. We're basically like if DNS was better. We officially launched our service yesterday but we've been running production traffic for a little over a year now. We’re hiring Go engineers. Check us out at www.backplane.io, @backplaneio on twitter, and talk to me after.
: 3) I’m here to talk about concurrency, broken code, and how to figure out if your code is broken, and ultimately stop it from being breaking. Let's start with an experiment. (1,2,3,4,5,6 cupcakes)
: 4) Brains didn’t evolve to deal with abstractions. Language is a retrofit. And it turns out language is not great at concurrent things. Go is specifically designed with concurrency in mind and even then it’s a challenge. How do we address this challenge?
: 5) Story about concurrent loop variable closures
: 6) So what do we do about this? Tools for dealing with complexity (go vet, go test -race)
: 7) I'd love to talk to people afterwards about their footgun experiences and what language they would use.

* 

.image cupcake.jpg

* Story time

* Your code is broken

.play -edit footgun1.go

* Stop breaking things - Use go tools

Static analysis

 $ go vet
 footgun1.go:11: range variable x captured by func literal
 exit status 1

* Stop breaking things - Use go tools

Race detector (dynamic)

 $ go run -race footgun1.go                        
 ==================       
 WARNING: DATA RACE       
 Read at 0x00c420082008 by goroutine 6:            
   main.main.func1()      
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun1.go:11 +0x3f                    
 
 Previous write at 0x00c420082008 by main goroutine:                                                 
   main.main()            
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun1.go:9 +0xa4                     
 
 Goroutine 6 (running) created at:                 
   main.main()            
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun1.go:10 +0xce                    
 ==================       
 1                        
 3                        
 3                        
 4                        
 4                        
 Found 1 data race(s)     
 exit status 66

* Stop breaking things - Use go tools

Race detector (with tests)

 $ go test -race
 ?       github.com/voutasaurus/talk     [no test files]


* Stop breaking things - Use go tools

Race detector (with tests)

 package main
 
 import "testing"
 
 func TestFootgun(t *testing.T) {
 	main()
 }

* Stop breaking things - Use go tools

Race detector (with tests)

 $ go test -race          
 ==================       
 WARNING: DATA RACE       
 Read at 0x00c420082080 by goroutine 7:            
   github.com/voutasaurus/talk.main.func1()        
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun1.go:11 +0x3f                    

 Previous write at 0x00c420082080 by goroutine 6:  
   github.com/voutasaurus/talk.main()              
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun1.go:9 +0xa4                     
   github.com/voutasaurus/talk.TestFootgun()       
       /Users/voutasaurus/go/src/github.com/voutasaurus/talk/footgun_test.go:6 +0x2f                 
   testing.tRunner()      
       /usr/local/go/src/testing/testing.go:746 +0x16c                                               
  
  ...
